head(sim$action)
head(sim$cost)
PopMod1 <- function(X_t0=100, sigma2_e=0.2, N_Harv=20, K=200, theta=1, r_max=1.0){
eps <- rnorm(1, mean=0, sd=sqrt(sigma2_e))
X_star <- X_t0-N_Harv
r <- (r_max*(1-(X_star/K)^theta))+eps
X_t1 <- X_star*exp(r)
PopRes <- as.data.frame(matrix(ncol=4, nrow=1))
PopRes[1,1] <- eps
PopRes[1,2] <- X_star
PopRes[1,3] <- r
PopRes[1,4] <- X_t1
colnames(PopRes) <- c("eps", "X_star", "r", "X_t1")
PopRes
}
PopMod1()
PopMod1()
PopMod1()
PopMod1()
PopMod2 <- function(X_t0=100, sigma2_e=0.2, N_Harv=20, K=200, r_max=1.0){
eps <- rnorm(1, mean=0, sd=sqrt(sigma2_e))
X_star <- X_t0-N_Harv
r_1 <- r_max+eps
beta <- r_max/log(K)
X_t1 <- (exp(r_1))*(X_star^(1-beta))
PopRes <- as.data.frame(matrix(ncol=4, nrow=1))
PopRes[1,1] <- eps
PopRes[1,2] <- X_star
PopRes[1,3] <- X_t1
PopRes[1,4] <- X_t1/X_star
colnames(PopRes) <- c("eps", "X_star", "X_t1", "lam")
PopRes
}
PopMod2
PopMod2()
PopMod1c <- function(X_t0=100, sigma2_e=0.2, N_Harv=20, K=200, theta=1, r_max=1.3){
eps <- rnorm(1, mean=0, sd=sqrt(sigma2_e))
X_star <- X_t0-N_Harv
r <- (r_max*(1-(X_t0/K)^theta))+eps
X_t1 <- X_star*exp(r)
PopRes <- as.data.frame(matrix(ncol=4, nrow=1))
PopRes[1,1] <- eps
PopRes[1,2] <- X_star
PopRes[1,3] <- r
PopRes[1,4] <- X_t1
colnames(PopRes) <- c("eps", "X_star", "r", "X_t1")
PopRes
}
PopMod1c()
sim <- gmse()
library(GMSE)
sim <- gmse()
?div
install.packages("RJSONIO")
shiny::runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
install.packages("plotly")
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
library(ggplot2)
library(Cairo)
install.packages("Cairo")
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
runApp('Dropbox/DuthieTeach/2017Fall/datapoint_eg/easyEG.R')
?ggplot
mtcars
?aes
?geom_point
?aes
?geom_point
?coord_cartesian
?nearPoints
?ggplot
?aes
?geom_smooth
?coord_cartesian
?plot
mtcars
mtcars[1:5,,]
mtcars[1:5,,3]
mtcars[1:5,,1]
mtcars[1:5,,5]
mtcars[1:5,,3]
mtcars[1:5,,drop = FALSE]
dim(mtcars)
?drop
keep
mtcars
keep2 <- 6:10
mtcars[keep, 6]
mtcars[keep2, 6]
?ggplot
?theme
?element_text
cor(rnorm(10),rnorm(10))
cor.test(rnorm(10),rnorm(10))
cor.test(rnorm(100),rnorm(100))
summary(lm(rnorm(100)~rnorm(100))
)
x <- rnorm(100)
y <- rnorm(100)
summary(lm(y~x))
summary(lm(y~x))$r.squared
?annotate
library(ggplot2)
?annotate
rbinom(n = 1, size = 1, prob = 0.5);
rbinom(n = 1, size = 1, prob = 0.5);
rbinom(n = 1, size = 1, prob = 0.5);
rbinom(n = 1, size = 1, prob = 0.5);
rbinom(n = 1, size = 1, prob = 0.5);
rbinom(n = 1, size = 1, prob = 0.5);
Trycatch(runif(10))
tryCatch(runif(10))
tryCatch(runif(10))
runif(10)
tryCatch(runif(-1))
runif(-1)
6+5+4+3+2+1
1/36
A <- matrix(data = c(-0.9, -1, -1, -0.9), nrow = 2, ncol = 2);
A <- matrix(data = c(-1, -0.9, -0.9, -1), nrow = 2, ncol = 2);
A <- matrix(data = c(-1, -0.9, -0.9, -1), nrow = 2, ncol = 2);
B     <- matrix(data = 1,     nrow = 2, ncol = 2);
C     <- matrix(data = 0.001, nrow = 2, ncol = 2);
D     <- matrix(data = c(0.001, 0, 0, 0.001), nrow = 2, ncol = 2);
AA    <- D + C %*% solve(A) %*% (-B);
AA
eigen(AA)
D     <- matrix(data = c(1, 0, 0, 1), nrow = 2, ncol = 2);
eigen(D)
D <- matrix(data = 0, nrow = 2, ncol = 2)
solve(D)
D      <- matrix(data = c(-1, 0, 0, -1), nrow = 2, ncol = 2);
D
solve(D)
B      <- matrix(data = -1, nrow = 2, ncol = 2);
B
B %*% solve(D)
C
B %*% solve(D) %*% (-C)
A
B      <- matrix(data = 1, nrow = 2, ncol = 2);
C      <- matrix(data = 1, nrow = 2, ncol = 2);
D      <- matrix(data = c(-1, 0, 0, -1), nrow = 2, ncol = 2);
B      <- matrix(data = -1, nrow = 2, ncol = 2);
B
A
C
D
B %*% solve(D)
-C
B %*% solve(D) %*% (-C)
A
B %*% solve(D) %*% (-C) + A
A + B %*% solve(D) %*% (-C)
eigen(A + B %*% solve(D) %*% (-C) )
A
A <- matrix(data = c(-0.5, -0.8, -0.2, -0.5), nrow = 2, ncol = 2);
eigen(A)$values;
A
A <- matrix(data = c(-0.3, -0.8, -0.2, -0.5), nrow = 2, ncol = 2);
eigen(A)
A
eigen(A)
B      <- matrix(data = c(0.3, 0.8, 0.2, 0.5), nrow = 2, ncol = 2);
C      <- matrix(data = c(0.3, 0.8, 0.2, 0.5), nrow = 2, ncol = 2);
D      <- matrix(data = c(-1, 0, 0, -1), nrow = 2, ncol = 2);
A      <- matrix(data = c(-0.3, -0.8, -0.2, -0.5), nrow = 2, ncol = 2);
eigen(A)$values;
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values; print(s_AA);
B      <- matrix(data = c(0.3, 0.8, 0.2, 0.5), nrow = 2, ncol = 2);
C      <- matrix(data = c(0.3, 0.8, 0.2, 0.5), nrow = 2, ncol = 2);
D      <- matrix(data = c(-1, 0, 0, -1), nrow = 2, ncol = 2);
A      <- matrix(data = c(-0.3, -0.8, -0.2, -0.5), nrow = 2, ncol = 2);
eigen(A)$values;
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values; print(s_AA);
vals <- NULL;
for(i in 1:1000){
v      <- runif(n = 8, min = 0, max = 10);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(s_AA));
}
vals
hist(vals)
vals <- NULL;
for(i in 1:10000){
v      <- runif(n = 8, min = 0, max = 10);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(s_AA));
}
B      <- matrix(data = c(0.3, 0.8, 0.2, 0.5), nrow = 2, ncol = 2);
C      <- matrix(data = c(0.3, 0.8, 0.2, 0.5), nrow = 2, ncol = 2);
D      <- matrix(data = c(-1, 0, 0, -1), nrow = 2, ncol = 2);
A      <- matrix(data = c(-0.3, -0.8, -0.2, -0.5), nrow = 2, ncol = 2);
vals <- NULL;
for(i in 1:10000){
v      <- runif(n = 8, min = 0, max = 10);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(s_AA));
}
vals <- NULL;
for(i in 1:1000){
v      <- runif(n = 8, min = 0, max = 10);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(s_AA));
}
vals
hist(vals)
test <- 2+i3
test <- 2+3i
test
real(test)
Real(test)
test
as.real(test)
Re(test)
vals <- NULL;
for(i in 1:10000){
v      <- runif(n = 8, min = 0, max = 10);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, Re(max(s_AA)));
}
vals
hist(vals)
min(vals)
vals <- NULL;
for(i in 1:10000){
u      <- runif(n = 4, min = -10, max = -0.0001);
v      <- runif(n = 8, min = 0, max = 10);
A      <- matrix(data = c(u[1], u[2], u[3], u[4]), nrow = 2, ncol = 2);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, Re(max(s_AA)));
}
vals <- NULL;
for(i in 1:10000){
u      <- runif(n = 4, min = -10, max = -0.0001);
v      <- runif(n = 8, min = 0, max = 10);
A      <- matrix(data = c(u[1], u[2], u[3], u[4]), nrow = 2, ncol = 2);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(Re(s_AA)));
}
hist(vals)
min(vals)
vals <- NULL;
for(i in 1:10000){
u      <- runif(n = 4, min = -10, max = -0.0001);
v      <- runif(n = 8, min = 0, max = 10);
A      <- matrix(data = c(u[1], u[2], u[3], u[4]), nrow = 2, ncol = 2);
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(Re(s_AA)));
if(max(Re(s_AA)) < 0){
break;
}
}
vals
A
B
C
D
eigen(A)
vals <- NULL;
for(i in 1:10000){
u      <- runif(n = 4, min = -10, max = -0.0001);
v      <- runif(n = 8, min = 0, max = 10);
A      <- matrix(data = c(u[1], u[2], u[3], u[4]), nrow = 2, ncol = 2);
if(max(Re(eigen(A)$values)) < 0){
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(Re(s_AA)));
}
}
min(vals)
vals <- NULL;
for(i in 1:10000){
u      <- runif(n = 4, min = -10, max = -0.0001);
v      <- runif(n = 8, min = 0, max = 10);
A      <- matrix(data = c(u[1], u[2], u[3], u[4]), nrow = 2, ncol = 2);
if(max(Re(eigen(A)$values)) < 0){
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(Re(s_AA)));
if(max(Re(s_AA)) < 0){
break;
}
}
}
vals
A
B
C
s_AA
eigen(A)
vals <- NULL;
for(i in 1:10000){
u      <- runif(n = 4, min = -10, max = -0.0001);
v      <- runif(n = 8, min = 0, max = 10);
A      <- matrix(data = c(u[1], u[2], u[3], u[4]), nrow = 2, ncol = 2);
if(max(Re(eigen(A)$values)) > 0){
B      <- matrix(data = c(v[1], v[2], v[3], v[4]), nrow = 2, ncol = 2);
C      <- matrix(data = c(v[5], v[6], v[7], v[8]), nrow = 2, ncol = 2);
AA     <- A + B %*% solve(D) %*% (-C);
s_AA   <- eigen(AA)$values;
vals   <- c(vals, max(Re(s_AA)));
if(max(Re(s_AA)) < 0){
break;
}
}
}
vals
s_AA
eigen(A)
setwd("~/Dropbox/projects/random_matrix_stability")
gen_var <- read.table(file = "gen_var_1-100.txt", header = TRUE);
gen_var <- read.table(file = "gen_var_1-100.csv", header = TRUE);
gen_var <- read.table(file = "gen_var_1-100.csv", header = TRUE, sep = ",");
gen_var
gen_var
dim(gen_var)
plot(gen_var[,1], gen_var[,2])
plot(gen_var[,1], gen_var[,3])
gen_var <- read.table(file = "gen_var_1-100.csv", header = TRUE, sep = ",");
stabi_1 <- gen_var[,2] / 100000;
stabi_2 <- gen_var[,3] / 100000;
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 0.01),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 0.01),
lty = "solid", pch = 20);
gen_var <- read.table(file = "gen_var_1-100.csv", header = TRUE, sep = ",");
stabi_1 <- gen_var[,2] / 100000;
stabi_2 <- gen_var[,3] / 100000;
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 0.01),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 0.01),
lty = "solid", pch = 20);
legend(x = 2, y = 0.010,
labels = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted");
legend(x = 2, y = 0.010,
labels = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
legend(x = 2, y = 0.010,
label = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
legend(x = 2, y = 0.010,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
gen_var <- read.table(file = "gen_var_1-100.csv", header = TRUE, sep = ",");
stabi_1 <- gen_var[,2] / 100000;
stabi_2 <- gen_var[,3] / 100000;
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 0.01),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 0.01),
lty = "solid", pch = 20);
legend(x = 2, y = 0.010,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
legend(x = 2, y = 0.010, lwd = 2,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
gen_var <- read.table(file = "gen_var_1-100.csv", header = TRUE, sep = ",");
stabi_1 <- gen_var[,2] / 100000;
stabi_2 <- gen_var[,3] / 100000;
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 0.01),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 0.01),
lty = "solid", pch = 20);
legend(x = 2, y = 0.010, lwd = 2,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
gen_var <- read.table(file = "dif_sp_gen_var.csv", header = TRUE, sep = ",");
stabi_1 <- gen_var[,2] / 1000000;
stabi_2 <- gen_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 1),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 1),
lty = "solid", pch = 20);
legend(x = 2, y = 0.010, lwd = 2,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
gen_var <- read.table(file = "dif_sp_gen_var.csv", header = TRUE, sep = ",");
stabi_1 <- gen_var[,2] / 1000000;
stabi_2 <- gen_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 1),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 1),
lty = "solid", pch = 20);
legend(x = 2, y = 1, lwd = 2,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
gen_var <- read.table(file = "dif_sp_gen_var.csv", header = TRUE, sep = ",");
stabi_1 <- log(gen_var[,2] / 1000000);
stabi_2 <- log(gen_var[,3] / 1000000);
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 1),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 1),
lty = "solid", pch = 20);
legend(x = 2, y = 1, lwd = 2,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
gen_var <- read.table(file = "dif_sp_gen_var.csv", header = TRUE, sep = ",");
stabi_1 <- gen_var[,2] / 1000000;
stabi_2 <- gen_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_1, type = "b", lwd = 2, ylim = c(0, 1),
xlab = "Species number", ylab = "Proportion stabilised",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
points(x = gen_var[,1], y = stabi_2, type = "b", lwd = 2, ylim = c(0, 1),
lty = "solid", pch = 20);
legend(x = 2, y = 1, lwd = 2,
legend = c("Generation time varies", "Generation time does not vary"),
lty = c("solid", "dotted"));
plot(x = gen_var[,1], y = stabi_2 / stabi_1, type = "b", lwd = 2, ylim = c(0, 5),
xlab = "Species number", ylab = "Stabile ratio (generation variation to no variation)",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
plot(x = gen_var[,1], y = stabi_2 / stabi_1, type = "b", lwd = 2, ylim = c(0, 5),
xlab = "Species number", ylab = "Stabile ratio (var to no var)",
cex.axis = 1.5, cex.lab = 1.5, lty = "dotted");
par(mar = c(5, 5, 2, 1));
plot(x = gen_var[,1], y = stabi_2 / stabi_1, type = "b", lwd = 2, ylim = c(0, 5),
xlab = "Species number", ylab = "Stabile ratio (var to no var)",
cex.axis = 1.5, cex.lab = 1.5, lty = "solid");
mag_var <- read.table(file = "var_gen_mag.csv", header = TRUE, sep = ",");
stabi_3 <- mag_var[,3];
par(mar = c(5, 5, 2, 1));
plot(x = log10(mag_var[,1]), y = stabi_3, type = "b", lwd = 2, ylim = c(0, 1),
xlab = "Generation time variation among species", ylab = "Proportion stabile",
cex.axis = 1.5, cex.lab = 1.5, lty = "solid");
mag_var <- read.table(file = "var_gen_mag.csv", header = TRUE, sep = ",");
stabi_3 <- mag_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = log10(mag_var[,1]), y = stabi_3, type = "b", lwd = 2, ylim = c(0, 1),
xlab = "Generation time variation among species", ylab = "Proportion stable",
cex.axis = 1.5, cex.lab = 1.5, lty = "solid");
mag_var <- read.table(file = "var_gen_mag.csv", header = TRUE, sep = ",");
stabi_3 <- mag_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = log10(mag_var[,1]), y = stabi_3, type = "b", lwd = 2, ylim = c(0, 0.04),
xlab = "Generation time variation among species", ylab = "Proportion stable",
cex.axis = 1.5, cex.lab = 1.5, lty = "solid");
mag_var <- read.table(file = "var_gen_mag.csv", header = TRUE, sep = ",");
stabi_3 <- mag_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = log10(mag_var[,1]), y = stabi_3, type = "b", lwd = 2, ylim = c(0, 0.01),
xlab = "Generation time variation among species", ylab = "Proportion stable",
cex.axis = 1.5, cex.lab = 1.5, lty = "solid");
mag_var <- read.table(file = "var_gen_mag.csv", header = TRUE, sep = ",");
stabi_3 <- mag_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = log10(mag_var[,1]), y = stabi_3, type = "b", lwd = 2, ylim = c(0, 0.001),
xlab = "Generation time variation among species", ylab = "Proportion stable",
cex.axis = 1.5, cex.lab = 1.5, lty = "solid");
mag_var <- read.table(file = "var_gen_mag.csv", header = TRUE, sep = ",");
stabi_3 <- mag_var[,3] / 1000000;
par(mar = c(5, 5, 2, 1));
plot(x = log10(mag_var[,1]), y = stabi_3, type = "b", lwd = 2, ylim = c(0, 0.0005),
xlab = "Generation time variation among species", ylab = "Proportion stable",
cex.axis = 1.5, cex.lab = 1.5, lty = "solid");
