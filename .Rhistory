mdat -> mutualism_data;
pdat -> predprey_data;
save(competition_data, mutualism_data, predprey_data, file = "ecology.rda");
library(RandomMatrixStability)
data(ecology)
ls()
library(RandomMatrixStability)
data(random_all)
ls()
head(rand_all)
C3dat   <- read.csv(file = "sim_results/C_other/rand_c-0pt3.csv");
data(connectedness)
ls()
head(C3dat)
fordist   <- read.csv(file = "sim_results/different_distr/four_distr_rand.csv");
head(fordist)
fordist -> fourdists;
save(fourdists, file = "fourdists.rda")
runif(n = 16)
evo_res   <- read.csv(file = "sim_results/evolved/evo_results.csv");
save(evo_res, file = "evo_res.rda")
evo_out   <- read.csv(file = "sim_results/evolved/evo_out.csv");
evo_out   <- read.csv(file = "sim_results/evolved/evo_out.txt");
evo_out <- read.delim(file = "sim_results/evolved/evo_out.txt", header = FALSE, sep = "\t", dec = ".", ...)
evo_out <- read.delim(file = "sim_results/evolved/evo_out.txt", header = FALSE, sep = "\t", dec = ".")
evo_out <- scan(file = "sim_results/evolved/evo_out.txt")
getwd()
evo_out <- scan(file = "notebook/sim_results/evolved/evo_out.txt")
head(evo_out)
dim(evo_out)
length(evo_out)
evo_out[[300]]
evo_out[[1]]
evo_out[[2]]
max(evo_out)
which(max(evo_out == 39))
which(evo_out == 39)
evo_[1888227]
evo_out[1888227]
evo_out[(1888227+1):(1888227 + 39)]
evo_out[(1888227+1):(1888227 + 40)]
size <- 4;
highest <- max(evo_out);
gammas  <- NULL;
while(size > 0){
pos <- which(evo_out == highest);
len <- length(pos);
nli <- NULL;
for(i in 1:len){
start          <- pos[i] + 1;
end            <- pos[i] + highest;
gammas[[size]] <- evo_out[start:end];
size           <- size - 1;
}
highest <- highest - 1;
}
which(evo_out == 38)
which(evo_out == 37)
which(evo_out == 36)
size
size <- 8;
highest <- max(evo_out);
gammas  <- NULL;
while(size > 0){
pos <- which(evo_out == highest);
len <- length(pos);
nli <- NULL;
for(i in 1:len){
start          <- pos[i] + 1;
end            <- pos[i] + highest;
gammas[[size]] <- evo_out[start:end];
size           <- size - 1;
}
highest <- highest - 1;
}
pos[i]
pos[i] + highest
evo_out[start:end]
size
highest <- max(evo_out);
gammas  <- NULL;
while(size > 0){
pos <- which(evo_out == highest);
len <- length(pos);
nli <- NULL;
for(i in 1:len){
start          <- pos[i] + 1;
end            <- pos[i] + highest;
gammas[[size]] <- evo_out[start:end];
size           <- size - 1;
if(size == 0){
break;
}
}
highest <- highest - 1;
}
gammas
highest <- max(evo_out);
gammas  <- NULL;
while(size > 0){
pos <- which(evo_out == highest);
len <- length(pos);
nli <- NULL;
for(i in 1:len){
start          <- pos[i] + 1;
end            <- pos[i] + highest;
gammas[[size]] <- evo_out[start:end];
size           <- size - 1;
if(size == 0){
break;
}
}
highest <- highest - 1;
}
gammas
higest
highest
size
size <- 10
highest <- max(evo_out);
gammas  <- NULL;
while(size > 0){
pos <- which(evo_out == highest);
len <- length(pos);
nli <- NULL;
for(i in 1:len){
start          <- pos[i] + 1;
end            <- pos[i] + highest;
gammas[[size]] <- evo_out[start:end];
size           <- size - 1;
if(size == 0){
break;
}
}
highest <- highest - 1;
}
gammas
gammas
par(mfrow = c(5, 2));
for(i in 1:10){
hist(gammas[[i]]);
}
par(mfrow = c(5, 2));
for(i in 1:10){
hist(gammas[[i]]);
}
gammas <- get_top_evo_out(file = file, size = 6);
par(mfrow = c(3, 2));
for(i in 1:6){
hist(gammas[[i]]);
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(gammas[[i]], main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(runif(n = 39), main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(gammas[[i]], main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2));
for(i in 1:6){
hist(gammas[[i]], main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
for(i in 1:6){
hist(gammas[[i]], main = "", breaks = 20, col = "grey",
ylim = c(0, 10));
}
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n");
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n");
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n");
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n");
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6));
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n");
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n");
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n");
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n");
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n");
hist(gammas[[5]], main = "", breaks = 20, col = "grey", ylim = c(0, 6));
hist(gammas[[6]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n");
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n");
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n");
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n");
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n");
hist(gammas[[5]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xlim = c(0, 1));
hist(gammas[[6]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n", xlim = c(0, 1));
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[5]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xlim = c(0, 1));
hist(gammas[[6]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n", xlim = c(0, 1));
?mtext
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[5]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xlim = c(0, 1));
hist(gammas[[6]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n", xlim = c(0, 1));
mtext(side = 1,
text = expression(paste("Component response rate (",gamma,")")));
mtext(side = 2, text = "Frequency");
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[5]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xlim = c(0, 1));
hist(gammas[[6]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n", xlim = c(0, 1));
mtext(side = 1, outer = TRUE,
text = expression(paste("Component response rate (",gamma,")")));
mtext(side = 2, text = "Frequency", outer = TRUE);
par(mfrow = c(3, 2), mar = c(0.25, 0.25, 0.25, 0.25), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1));
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1));
hist(gammas[[5]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xlim = c(0, 1));
hist(gammas[[6]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n", xlim = c(0, 1));
mtext(side = 1, outer = TRUE, line = 3, cex = 1.5,
text = expression(paste("Component response rate (",gamma,")")));
mtext(side = 2, text = "Frequency", outer = TRUE, line = 3, cex = 1.5);
length(evo_out)
save(evo_out, file = "evo_out.rda")
plot_evo_out <- function(evo_out){
gammas <- get_top_evo_out(evo_out, size = 9);
par(mfrow = c(3, 3), mar = c(0.5, 0.5, 0.5, 0.5), oma = c(5, 5, 1, 1));
hist(gammas[[1]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1.3));
hist(gammas[[2]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1.3));
hist(gammas[[3]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1.3));
hist(gammas[[4]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", xlim = c(0, 1.3));
hist(gammas[[5]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1.3));
hist(gammas[[6]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xaxt = "n", yaxt = "n", xlim = c(0, 1.3));
hist(gammas[[7]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
xlim = c(0, 3));
hist(gammas[[8]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n", xlim = c(0, 1.3));
hist(gammas[[9]], main = "", breaks = 20, col = "grey", ylim = c(0, 6),
yaxt = "n", xlim = c(0, 1.3));
mtext(side = 1, outer = TRUE, line = 3, cex = 1.5,
text = expression(paste("Component response rate (",gamma,")")));
mtext(side = 2, text = "Frequency", outer = TRUE, line = 3, cex = 1.5);
}
evo_out <- scan(file = "sim_results/evolved/evo_out.txt");
plot_evo_out(evo_out)
M <- matrix(data = rnorm(9, 0, 1), nrow = 3)
M
solve(M)
r <- rnorm(3)
-1*solve(M) %*% r
(-1*solve(M)) %*% r
-1*(solve(M) %*% r)
dat <- read.csv(file = "sim_results/C_1/random_all.csv");
head(dat)
install.packages("devtools");
library(devtools);
install_github("bradduthie/random_matrix_stability")
install_github("bradduthie/RandomMatrixStability")
