sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.01);
rseq  <- seq(from = -2, to = 2, by = 0.01);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 3);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
k          <- k + 1;
}
print(i);
}
mg2 <- ttab[,3];
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
B
fnorm(B)
norm(B, type = "F")
Re(B)
norm(Re(B), type = "F")
fnorm(B)
fnorm(B)/2
S     <- 128;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.1);
rseq  <- seq(from = -2, to = 2, by = 0.1);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 3);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
B
Re(B)
norm(B, type = "F");
norm(Re(B), type = "F");
fnorm <- function(mat){
fsum <- 0;
for(i in 1:dim(mat)[1]){
for(j in 1:dim(mat)[2]){
fsum <- fsum + (Re(mat[i,j])^2 + Im(mat[i,j])^2);
}
}
fsum <- sqrt(fsum);
return(fsum);
}
S     <- 128;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.1);
rseq  <- seq(from = -2, to = 2, by = 0.1);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 3);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
fnorm <- function(mat){
fsum <- 0;
for(i in 1:dim(mat)[1]){
for(j in 1:dim(mat)[2]){
fsum <- fsum + (Re(mat[i,j])^2 + Im(mat[i,j])^2);
}
}
fsum <- sqrt(fsum);
return(fsum);
}
S     <- 128;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.1);
rseq  <- seq(from = -2, to = 2, by = 0.1);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 3);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
#BB2      <- norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
fnorm <- function(mat){
fsum <- 0;
for(i in 1:dim(mat)[1]){
for(j in 1:dim(mat)[2]){
fsum <- fsum + (Re(mat[i,j])^2 + Im(mat[i,j])^2);
}
}
fsum <- sqrt(fsum);
return(fsum);
}
S     <- 128;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.1);
rseq  <- seq(from = -2, to = 2, by = 0.1);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 4);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
mg2 <- ttab[,3];
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
mg2 <- ttab[,4];
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
mg2 <- ttab[,4];
head(mg2)
mg2 <- Re(ttab[,4]);
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
mg2 <- Re(ttab[,3]);
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
S     <- 625;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.1);
rseq  <- seq(from = -2, to = 2, by = 0.1);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 4);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- (1/S) * norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
fnorm <- function(mat){
fsum <- 0;
for(i in 1:dim(mat)[1]){
for(j in 1:dim(mat)[2]){
fsum <- fsum + (Re(mat[i,j])^2 + Im(mat[i,j])^2);
}
}
fsum <- sqrt(fsum);
return(fsum);
}
S     <- 128;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.1);
rseq  <- seq(from = -2, to = 2, by = 0.1);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 4);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- (1/S) * norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
mg2 <- Re(ttab[,3]);
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
mg2 <- Re(ttab[,4]);
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
S     <- 400;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.1);
rseq  <- seq(from = -2, to = 2, by = 0.1);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 4);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- (1/S) * norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
mg2 <- Re(ttab[,4]);
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
dim(mg2)
dim(gr1)
length(gr1)
S     <- 64;
sigma <- 1 / sqrt(S);
iseq  <- seq(from = -2, to = 2, by = 0.01);
rseq  <- seq(from = -2, to = 2, by = 0.01);
ttab  <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 4);
k     <- 1;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- runif(n = S, min = 0, max = 2);
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- runif(n = S, min = 0, max = 2);
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- (1/S) * norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
}
print(i);
}
S        <- 128;
sigma    <- 1 / sqrt(S);
iseq     <- seq(from = -2, to = 2, by = 0.005);
rseq     <- seq(from = -4, to = 1, by = 0.005);
ttab     <- matrix(data = 0, nrow = length(iseq) * length(rseq), ncol = 4);
k        <- 1;
L        <- matrix(data = 0, nrow = S, ncol = S);
diag(L)  <- 1 # runif(n = S, min = 0, max = 2); #
R        <- matrix(data = 0, nrow = S, ncol = S);
diag(R)  <- 1;
M        <- matrix(data = rnorm(n = S*S, sd = sigma), nrow = S, ncol = S);
diag(M)  <- -1;
M         <- L %*% M;
for(i in iseq){
for(j in rseq){
z        <- j + i*1i;
Z        <- matrix(data = 0, nrow = S, ncol = S);
diag(Z)  <- z;
Mz       <- solve(L) %*% (Z - M) %*% solve(R);
t1       <- (1/S) * sum(diag(solve(Mz %*% t(Mz))));
B        <- R %*% solve(Z - M) %*% L;
BB       <- (1/S) * fnorm(mat = B);
BB2      <- (1/S) * norm(Re(B), type = "F");
ttab[k, 1] <- z;
ttab[k, 2] <- t1;
ttab[k, 3] <- BB;
ttab[k, 4] <- BB2;
k          <- k + 1;
print(j);
}
print(i);
}
mg2 <- Re(ttab[,4]);
gr1 <- which(mg2 >= 1);
prs <- ttab[gr1, ];
plot(x = Re(prs[,1]), y = Im(prs[,1]), pch = 20, cex = 0.5, asp = 1);
write.csv(ttab, "novar_ttab.csv");
write.csv(eigen(M)$values, "novar_eigens.csv");
setwd("~/Dropbox/projects/RandomMatrixStability/notebook/sim_results/ecology")
c1 <- read.csv("cascade1.csv");
c1  <- read.csv("cascade1.csv");
c2  <- read.csv("cascade2.csv");
c34 <- read.csv("cascade3-4.csv");
c5  <- read.csv("cascade5.csv");
c6  <- read.csv("cascade6.csv");
c7  <- read.csv("cascade7.csv");
c8  <- read.csv("cascade8.csv");
c9  <- read.csv("cascade9.csv");
c10 <- read.csv("cascade10.csv");
head(c1)
addedc <- c1[,2:13] + c2[,2:13] + c34[,2:13] + c5[,2:13] + c6[,2:13] +
c7[,2:13] + c8[,2:13] + c9[,2:13]  + c10[,2:13];
addedc
head(c1)
head(c2)
c1  <- read.csv("cascade1.csv");
c2  <- read.csv("cascade2.csv");
c34 <- read.csv("cascade3-4.csv");
c5  <- read.csv("cascade5.csv");
c6  <- read.csv("cascade6.csv");
c7  <- read.csv("cascade7.csv");
c8  <- read.csv("cascade8.csv");
c9  <- read.csv("cascade9.csv");
c10 <- read.csv("cascade10.csv");
addedc <- c1[,2:13] + c2[,2:13] + c34[,2:13] + c5[,2:13] + c6[,2:13] +
c7[,2:13] + c8[,2:13] + c9[,2:13]  + c10[,2:13];
addedc
addedc <- cbind(c1[,1], addedc);
addedc
c1
multc <- 0.1*c1[,14:19] + 0.1*c2[,14:19] + 0.2*c34[,14:19] + 0.1*c5[,14:19] +
0.1*c6[,14:19] + 0.1*c7[,14:19] + 0.1*c8[,14:19] + 0.1*c9[,14:19] +
0.1*c10[,14:19];
head(multc)
plot(multc[,13], c1[,13]);
plot(multc[,14], c1[,1]);
plot(multc[,1], c1[,14]);
plot(multc[,6], c1[,19]);
multc[,6] - c1[,19]
hist(multc[,6] - c1[,19])
dat <- cbind(addedc, multc);
dat
write.csv(dat, "cascade.csv");
15699 / 1000000
getwd()
source("R/random_mats.R")
source("R/utilities.R")
sim <- rand_gen_var(max_sp = 25, iters = 10000, dval = 0);
sim <- rand_gen_var(max_sp = 25, iters = 10000, dval = -0.0001);
sim
rand_gen_var <- function(max_sp, iters, int_type = 0, rmx = 0.4, C = 1, by = 1,
sigma = 0.4, mn = 0, dval = 1){
tot_res <- NULL;
fea_res <- NULL;
rho_res <- NULL;
cmplxty <- NULL;
sp_try  <- seq(from = by, to = max_sp, by = by);
for(i in 1:length(sp_try)){
iter           <- iters;
tot_res[[i]]   <- matrix(data = 0, nrow = iter, ncol = 7);
fea_res[[i]]   <- matrix(data = 0, nrow = iter, ncol = 7);
rho_res[[i]]   <- matrix(data = 0, nrow = iter, ncol = 6);
cmplxty[[i]]   <- matrix(data = 0, nrow = iter, ncol = 2);
while(iter > 0){
r_vec    <- rnorm(n = sp_try[i], mean = mn, sd = rmx);
A0_dat   <- rnorm(n = sp_try[i] * sp_try[i], mean = mn, sd = sigma);
A0       <- matrix(data = A0_dat, nrow = sp_try[i],
ncol = sp_try[i]);
A0       <- species_interactions(mat = A0, type = int_type);
C_dat    <- rbinom(n = sp_try[i] * sp_try[i], size = 1, prob = C);
C_mat    <- matrix(data = C_dat, nrow = sp_try[i],
ncol = sp_try[i]);
A0       <- A0 * C_mat;
diag(A0) <- -1 * dval;
gam1     <- runif(n = sp_try[i], min = 0, max = 2);
A1       <- A0 * gam1;
A0       <- A0 * mean(gam1);
diag(A0) <- -1 * dval;
diag(A1) <- -1 * dval;
A0_stb   <- max(Re(eigen(A0)$values)) < 0;
A1_stb   <- max(Re(eigen(A1)$values)) < 0;
A0_fea   <- min(-1*solve(A0) %*% r_vec) > 0;
A1_fea   <- min(-1*solve(A1) %*% r_vec) > 0;
A0_rho   <- mat_rho(A0);
A1_rho   <- mat_rho(A1);
rho_diff <- A1_rho - A0_rho;
rho_abs  <- abs(A1_rho) - abs(A0_rho);
if(A0_stb == TRUE){
tot_res[[i]][iter, 1] <- 1;
}
if(A1_stb == TRUE){
tot_res[[i]][iter, 2] <- 1;
}
if(A0_fea == TRUE){
fea_res[[i]][iter, 1] <- 1;
}
if(A1_fea == TRUE){
fea_res[[i]][iter, 2] <- 1;
}
rho_res[[i]][iter, 1] <- A0_rho;
rho_res[[i]][iter, 2] <- A1_rho;
rho_res[[i]][iter, 3] <- rho_diff;
rho_res[[i]][iter, 4] <- rho_abs;
rho_res[[i]][iter, 5] <- max(Re(eigen(A0)$values));
rho_res[[i]][iter, 6] <- max(Re(eigen(A1)$values));
cmplxty[[i]][iter, 1] <- get_complexity(A0);
cmplxty[[i]][iter, 2] <- get_complexity(A1);
iter                  <- iter - 1;
}
print(sp_try[i]);
}
all_res     <- summarise_randmat(tot_res = tot_res, fea_res = fea_res,
rho_res = rho_res, cmplxty = cmplxty);
all_res[,1] <- sp_try;
return(all_res);
}
sim <- rand_gen_var(max_sp = 25, iters = 10000);
sim
sim <- rand_gen_var(max_sp = 35, iters = 10000);
sim
sim <- rand_gen_var(max_sp = 35, iters = 100000);
sim
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
