% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ga.R
\name{rand_mat_ga}
\alias{rand_mat_ga}
\title{Genetic algorithm to find stability}
\usage{
rand_mat_ga(A1, max_it = 20, converg = 0.01)
}
\arguments{
\item{A1}{Square matrix representing a complex system}

\item{max_it}{Maximum number of generations the genetic algorithm is allowed
to run before giving up and declaring no stabilising set of gammas is found}

\item{converg}{Convergence criteria for the genetic algorithm; if the mean 
fitness from one generation to the next (in terms of improvement shifting
leading Real parts of  eigenvalues to the left) is below this, then the 
algorithm gives up and declares no stabilising set of gammas is found}
}
\value{
A value indicating whether or not a stabilising vector is (1) or is
not (0) found by the genetic algorithm. If so, then the vector is appended to
the file "evo_out.txt".
}
\description{
Runs a genetic algorithm in attempt to find a vector (gamma) that, when the 
elements of which are multiplied as scalar values on a matrix, A1, which 
represents a complex system, causes all real parts of eigenvalues of A1 to
be negative, and the complex system to therefore be stable.
}
\examples{
A_mat <- matrix(data = rnorm(n = 16), nrow = 4);
sim   <- rand_mat_ga(A1 = A_mat, max_it = 10);
}
